---
esphome:
  name: kettlesensor
  friendly_name: kettlesensor

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key

ota:


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "kettlesensor"
    # password: !secret fallback_password
    # uncomment for password protected fallback hotspot

captive_portal:
    
#Set miso/mosi/clk pins for MAX31865
spi:
  miso_pin: 19
  mosi_pin: 23
  clk_pin: 18

sensor:
  - platform: max31865
    name: "Kettle Temp Sensor"
    id: kts
    cs_pin: 5
    reference_resistance: 430 Ω
    rtd_nominal_resistance: 100 Ω
    update_interval: 2s

i2c:
  sda: 21
  scl: 22
  frequency: 800kHz

font:
  - file: 'signalextrabold.ttf'
    id: font1
    size: 24

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x32"
    address: 0x3C
    id: my_display
    lambda: |-
      if (id(kts).state == id(kts).state) {
        it.printf(0, 4, id(font1), " %.2f F", (1.8*(id(kts).state))+32);
      } else {
        it.print(0, 4, id(font1), "waiting");
      }

interval:
  - interval: 1s
    then:
      - component.update: my_display